app-id: org.luxrender.luxrenderui
runtime: org.kde.Platform
runtime-version: 5.15-22.08
sdk: org.kde.Sdk
command: luxrender

finish-args:
  - --device=dri
  - --share=network
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  - --filesystem=host:rw

cleanup:
  - /include
  - /lib/pkgconfig
  - /lib/cmake
  - /lib/*.a
  - /share/cmake
  - /share/doc
  - /bin/exr*
  - /bin/embree2

modules:

# This script requires the zlib, bzip2, lzma, jpeg, openjpeg, tiff, png, freetype, and fftw development packages.

# Qt5 Core, Gui, Widgets, and Imageformats are required for TIFF output.

# Python 3.5 requires an older OpenSSL version.

  - name: OpenSSL
    no-debuginfo: true
    buildsystem: simple
    build-commands:
      - ./config shared -fPIC -w -std=c++11
      - make install INSTALL_PREFIX=/app INSTALLTOP=/
    post-install:
      - chmod --recursive 777 $FLATPAK_DEST/lib/*
    sources:
      - type: git
        url: https://github.com/openssl/openssl/
        tag: OpenSSL_1_0_2-stable
  
  - name: Python3
    no-debuginfo: true
    buildsystem: simple
    build-commands:
      - ./configure --prefix=/app --with-openssl=/app/bin --enable-shared --with-ensurepip=no
      - make install -j "${FLATPAK_BUILDER_N_JOBS}" LD_RUN_PATH=$ORIGIN cc=g++ cxx=g++ cxxflags="-w -fPIC -std=c++11 -I /app/bin -I /app/include/openssl -fpermissive"
    post-install:
      - chmod 644 $FLATPAK_DEST/lib/libpython3.5m.so.1.0
      - chmod 644 $FLATPAK_DEST/lib/libpython3.so
    sources:
      - type: archive
        url: https://www.python.org/ftp/python/3.5.3/Python-3.5.3.tar.xz
        sha256: eefe2ad6575855423ab630f5b51a8ef6e5556f774584c06beab4926f930ddbb0

# Binaries extracted from the Flatpak require libdeflate.

  - name: libdeflate
    no-debuginfo: true
    buildsystem: cmake
    build-options:
      cxxflags: -w -std=c++11
      build-args:
      config-opts:
        - -D LIBDEFLATE_BUILD_TESTS=OFF
    sources:
      - type: git
        url: https://github.com/ebiggers/libdeflate
        tag: v1.18

  - name: Boost
    no-debuginfo: true
    buildsystem: simple
    build-commands:
      - ./bootstrap.sh --prefix=/app --with-python=/app/bin/python3 --with-python-root=/app
      - ./b2 install hardcode-dll-paths=true dll-path="'\$ORIGIN'" variant=release link=shared runtime-link=shared cxxflags="${CXXFLAGS} -std=c++11 -O3 -w -I /app/include/python3.5m" linkflags="${LDFLAGS}" -j "${FLATPAK_BUILDER_N_JOBS}"
    sources:
      - type: archive
        url: http://sourceforge.net/projects/boost/files/boost/1.56.0/boost_1_56_0.tar.bz2
        sha1: f94bb008900ed5ba1994a1072140590784b9b5df

  - name: TBB
    no-debuginfo: true
    buildsystem: cmake
    build-options:
      cflags: -O3 -funwind-tables -ftree-vectorize -funroll-loops -fasynchronous-unwind-tables -flto -fno-fat-lto-objects
      cxxflags: -w -O3 -funwind-tables -ftree-vectorize -funroll-loops -fasynchronous-unwind-tables -flto -fno-fat-lto-objects
    sources:
      - type: archive
        url: https://github.com/oneapi-src/oneTBB/archive/2019_U8.tar.gz
        sha256: 6b540118cbc79f9cbc06a35033c18156c21b84ab7b6cf56d773b168ad2b68566
      - type: patch
        path: patches/tbb/tbb_cmake.patch

  - shared-modules/glew/glew.json

  - shared-modules/glu/glu-9.json

  - name: freeglut
    no-debuginfo: true
    buildsystem: cmake
    build-options:
      cflags: -w -fcommon
      ldflags: -Wl,-rpath,$ORIGIN
    config-opts:
      - -D FREEGLUT_BUILD_STATIC_LIBS=OFF
    sources:
      - type: git
        url: https://github.com/FreeGLUTProject/freeglut.git
        tag: v3.2.2

  - name: IlmBase
    no-debuginfo: true
    buildsystem: cmake
    build-options:
      cxxflags: -w -std=c++11
      ldflags: -Wl,-rpath,$ORIGIN
    subdir:
      IlmBase
    sources: &openexr_sources
      - type: git
        url: https://github.com/AcademySoftwareFoundation/openexr.git
        tag: v2.2.0

  - name: OpenEXR
    no-debuginfo: true
    buildsystem: cmake
    build-options:
      cxxflags: -w -std=c++11 -I /app/include/OpenEXR
      ldflags: -Wl,-rpath,$ORIGIN
    subdir:
      OpenEXR
    sources:
      *openexr_sources
      
  - name: Imath
    no-debuginfo: true
    buildsystem: cmake
    build-options:
      cxxflags: -w -std=c++11 -I /app/bin -I /app/include/python3.5m -L /app/lib -lpython3.5m -Wno-error=stringop-truncation -Wno-error=class-memaccess -Wno-error=sizeof-pointer-memaccess -Wno-error=unused-function -Wno-error=deprecated-declarations -Wno-error=maybe-uninitialized -Wno-error=stringop-overflow= -Wno-error=misleading-indentation -Wno-error=format-truncation= -Wno-error=aligned-new= -Wno-error=mismatched-new-delete
      ldflags: -Wl,-rpath,$ORIGIN
    builddir: true
    config-opts:
      - -D USE_PYTHON=OFF
      - -D USE_PYTHON3=ON
      - -D PYTHON_INCLUDE_DIR=/app/include/python3.5m
      - -D PYTHON_LIBRARY=/app/lib/libpython3.5m.so
      - -D PYTHON_HOME=/app/bin
      - -D BUILD_TESTING=OFF
      - -D INSTALL_DOCS=OFF
      - -D JPEGTurbo_ROOT=/app/include/
      - -D CMAKE_CXX_STANDARD=14
    sources:
      - type: git
        url: https://github.com/AcademySoftwareFoundation/Imath.git
        tag: v3.1.9

  - name: OpenImageIO
    no-debuginfo: true
    buildsystem: cmake
    build-options:
      cxxflags: -w -std=c++11 -fPIC -I /app/bin -I /app/include/python3.5m -L /app/lib -lpython3.5m -Wno-error=stringop-truncation -Wno-error=class-memaccess -Wno-error=sizeof-pointer-memaccess -Wno-error=unused-function -Wno-error=deprecated-declarations -Wno-error=maybe-uninitialized -Wno-error=stringop-overflow= -Wno-error=misleading-indentation -Wno-error=format-truncation= -Wno-error=aligned-new= -Wno-error=mismatched-new-delete
      ldflags: -Wl,-rpath,$ORIGIN
    builddir: true
    config-opts:
      - -D USE_PYTHON=OFF
      - -D USE_PYTHON3=ON
      - -D PYTHON_INCLUDE_DIR=/app/include/python3.5m
      - -D PYTHON_LIBRARY=/app/lib/libpython3.5m.so
      - -D PYTHON_HOME=/app/bin
      - -D BUILD_TESTING=OFF
      - -D INSTALL_DOCS=OFF
      - -D INSTALL_FONTS=OFF
      - -D OIIO_BUILD_TESTS=OFF
      - -D OIIO_BUILD_TOOLS=OFF
      - -D STOP_ON_WARNING=OFF
      - -D USE_FFMPEG=OFF
      - -D USE_FIELD3D=OFF
      - -D USE_FREETYPE=OFF
      - -D USE_LIBRAW=OFF
      - -D USE_NUKE=OFF
      - -D USE_OCIO=OFF
      - -D USE_QT=OFF
    sources:
      - type: git
        url: https://github.com/OpenImageIO/oiio.git
        tag: Release-1.6.3dev
      - type: patch
        path: patches/oiio/oiio_gpstag_redefinition.patch
        
  - name: Embree
    no-debuginfo: true
    buildsystem: cmake
    build-options:
      cxxflags: -w
      ldflags: -Wl,-rpath,$ORIGIN
    config-opts:
      - -D EMBREE_ISPC_SUPPORT=OFF
      - -D EMBREE_TUTORIALS=OFF
      - -D EMBREE_MAX_ISA=SSE2
    sources:
      - type: git
        url: https://github.com/embree/embree/
        tag: v2.17.7

  - name: FreeImage
    no-debuginfo: true
    buildsystem: simple
    build-commands:
      - make -j
      - make INSTALLDIR=/app/lib install
    sources:
      - type: archive
        url: https://sourceforge.net/projects/freeimage/files/Source%20Distribution/3.18.0/FreeImage3180.zip
        sha256: f41379682f9ada94ea7b34fe86bf9ee00935a3147be41b6569c9605a53e438fd
      - type: patch
        path: patches/freeimage/freeimage-paths.patch

# OpenCL dependencies required for GPU rendering.

  - name: OpenCL-Headers
    no-debuginfo: true
    buildsystem: cmake-ninja
    sources:
      - type: git
        url: https://github.com/KhronosGroup/OpenCL-Headers.git
        tag: v2022.01.04

  - name: OpenCL-CLHPP
    no-debuginfo: true
    buildsystem: cmake-ninja
    config-opts:
      - -D OPENCL_INCLUDE_DIR=/app/include
      - -D OPENCL_LIB_DIR=/app/lib
      - -D BUILD_EXAMPLES=OFF
      - -D BUILD_TESTS=OFF
      - -D BUILD_DOCS=OFF
    sources:
      - type: archive
        url: https://github.com/KhronosGroup/OpenCL-CLHPP/archive/refs/tags/v2.0.11.tar.gz
        sha256: ffc2ca08cf4ae90ee55f14ea3735ccc388f454f4422b69498b2e9b93a1d45181

# Build a minimal Qt5 to support the updated GUI.

  - name: Qt5
    no-debuginfo: true
    buildsystem: simple
    build-options:
      cxxflags: -w -std=c++11
      ldflags: -Wl,-rpath,$ORIGIN
    build-commands:
      - ./configure -prefix "/app" -release -opensource -nomake examples -nomake tests -no-icu
      - make install -j "${FLATPAK_BUILDER_N_JOBS}"
    sources:
     - type: archive
       url: https://download.qt.io/archive/qt/5.15/5.15.10/submodules/qtbase-everywhere-opensource-src-5.15.10.tar.xz
       sha256: c0d06cb18d20f10bf7ad53552099e097ec39362d30a5d6f104724f55fa1c8fb9

# Using the modified LuxRays git is REQUIRED; https://github.com/LuxRender/LuxRays will NOT build.

  - name: LuxRays
    no-debuginfo: true
    buildsystem: cmake
    build-options:
      cxxflags: -w -march=native -std=c++11 -msse -msse2 -mavx -mfpmath=sse -O3 -pipe -ftree-vectorize -fno-math-errno -fno-signed-zeros -fno-trapping-math -fassociative-math -fno-rounding-math -fno-signaling-nans -fcx-limited-range -floop-interchange -floop-strip-mine -floop-block -fsee -ftree-loop-linear -ftree-loop-distribution -ftree-loop-im -fivopts -ftracer -fomit-frame-pointer -fno-stack-protector -Wno-narrowing -pthread -DBOOST_DISABLE_ASSERTS -DHAVE_PTHREAD_H -DLUXCORE_DISABLE_EMBREE_BVH_BUILDER -DCL_USE_DEPRECATED_OPENCL_1_2_APIS -DCL_TARGET_OPENCL_VERSION=120 -DCMAKE_BUILD_TYPE=Release -L /app/lib -I /app/include/python3.5m -lpython3.5m -I /usr/include/gtk-3.0 -I /usr/include/gtk-3.0/gtk -I /usr/include/glib-2.0 -I /usr/lib/x86_64-linux-gnu/glib-2.0/include/ -I /usr/include/pango-1.0/ -I /usr/include/harfbuzz -I /usr/include/cairo -I /usr/include/gdk-pixbuf-2.0 -I /usr/include/atk-1.0 -lOpenImageIO_Util
      cflags: -L /app/lib -lOpenImageIO_Util -lpython3.5m -I /app/include/python3.5m -L /usr/lib/x86_64-linux-gnu -lpthread -lgobject-2.0 -lgtk-3 -lglib-2.0 -I /usr/include/gtk-3.0 -I /usr/include/gtk-3.0/gtk -I /usr/include/glib-2.0 -I /usr/lib/x86_64-linux-gnu/glib-2.0/include/ -I /usr/include/pango-1.0/ -I /usr/include/harfbuzz -I /usr/include/cairo -I /usr/include/gdk-pixbuf-2.0 -I /usr/include/atk-1.0
      ldflags: -Wl,-rpath,$ORIGIN/lib
    config-opts:
      - -D PYTHON_INCLUDE_DIR=/app/include/python3.5m
      - -D PYTHON_LIBRARY=/app/lib/libpython3.5m.so
      - -D OpenEXR_Imath_INCLUDE_DIR=/app/include/Imath/
      - -D OpenEXR_half_INCLUDE_DIR=/app/include/Imath/
    no-make-install: true
    post-install:
      - mkdir -pv /app/include
      - cp -av include/. /app/include/.
      - mkdir -pv /app/lib
      - cp -av lib/. /app/lib/.
      - cp -rv ${FLATPAK_BUILDER_BUILDDIR}/lib/* /app/lib/
    sources:
      - type: git
        url: https://github.com/rrubberr/Flatpak-LuxRays 
        tag: for_v1.7_qt5

# Using the modified Lux git is REQUIRED; https://github.com/LuxRender/Lux will NOT build.

  - name: LuxRender
    no-debuginfo: true
    buildsystem: cmake
    build-options:
      cxxflags: -w -march=native -std=c++11 -msse -msse2 -mavx -mfpmath=sse -O3 -pipe -ftree-vectorize -fno-math-errno -fno-signed-zeros -fno-trapping-math -fassociative-math -fno-rounding-math -fno-signaling-nans -fcx-limited-range -floop-interchange -floop-strip-mine -floop-block -fsee -ftree-loop-linear -ftree-loop-distribution -ftree-loop-im -fivopts -ftracer -fomit-frame-pointer -fno-stack-protector -Wno-narrowing -pthread -DBOOST_DISABLE_ASSERTS -DHAVE_PTHREAD_H -DCL_USE_DEPRECATED_OPENCL_1_2_APIS -DCL_TARGET_OPENCL_VERSION=120 -DCMAKE_BUILD_TYPE=Release -I /app/bin -I /app/lib -I /app/include/python3.5m -lpython3.5m -I /app/lib/cmake/ -I /app/lib/cmake/Qt5 -L /app/lib -lQt5Core -lQt5Gui -lQt5Widgets -L /usr/lib/x86_64-linux-gnu -lOpenImageIO_Util -I /app/include/OpenImageIO -lOpenImageIO
      ldflags: -Wl,-rpath,$ORIGIN/lib
    builddir: true
    config-opts:
      - -D LuxRays_HOME=/app
      - -D LUX_DOCUMENTATION=OFF
      - -D PYTHON_CUSTOM=TRUE
      - -D PYTHON_INCLUDE_PATH=/app/include/python3.5m
      - -D PYTHON_LIBRARIES=/app/lib/libpython3.5m.so
      - -D LUX_USE_FREEIMAGE=TRUE
      - -D FREEIMAGE_INCLUDE_DIR=/app/include
      - -D OpenEXR_Imath_INCLUDE_DIR=/app/include/Imath/
      - -D OpenEXR_half_INCLUDE_DIR=/app/include/Imath/
      - -D PYTHON_HOME=/app/bin
      - -D Qt5_DIR=/app/lib/cmake/Qt5
      - -D CMAKE_PREFIX_PATH=/app/lib/cmake/Qt5
      - -D CMAKE_FIND_PACKAGE_PREFER_CONFIG=TRUE
      - -D OPENIMAGEIO_INCLUDE_DIR=/app/include/OpenImageIO
    post-install:
      - cp -rv ${FLATPAK_BUILDER_BUILDDIR}/_flatpak_build/* /app/bin/
    sources:
      - type: dir
        path: Lux/

# Install the app. The extract-binaries.sh script can now be used to create a standalone LuxRender.

  - name: metadata
    buildsystem: simple
    build-commands:
       - install -Dm0644 -t /app/share/metainfo/ org.luxrender.luxrenderui.metainfo.xml
       - install -Dm0644 -t /app/share/applications/ org.luxrender.luxrenderui.desktop
       - install -Dm0644 -t /app/share/icons/hicolor/64x64/apps/ org.luxrender.luxrenderui.png
       - install -Dm0644 -t /app/usr/share/icons/hicolor/64x64/apps/ org.luxrender.luxrenderui.png
    sources:
      - type: file
        path: org.luxrender.luxrenderui.metainfo.xml
      - type: file
        path: org.luxrender.luxrenderui.desktop
      - type: file
        path: org.luxrender.luxrenderui.png
